{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/saga.js","components/index.js","App.js","reportWebVitals.js","index.js"],"names":["changeExchangeRates","oldState","data","newState","forEach","ele","idx","currency","rate","exchangeWallet","index","findIndex","item","amount","initialWallet","symbol","initialSaga","loading","error","message","combineReducers","wallet","state","action","type","saga","getExchangeRates","tradeWatcher","rootSaga","call","fetch","process","response","ok","json","put","rates","statusText","console","log","takeLatest","all","LoadingScreen","className","ExchangeController","useSelector","dispatch","useDispatch","useState","firstWallet","setFirstWallet","firstValue","setFirstValue","secondWallet","setSecondWallet","secondValue","setSecondValue","exchangeRate","setExchangeRate","useEffect","Math","round","style","padding","fontSize","flex","value","toString","onChange","e","currencyIdx","Number","target","map","disabled","data-testid","flexDirection","alignItems","onClick","WalletShower","paddingTop","paddingBottom","textAlign","ExchangeCard","background","borderRadius","Notification","show","setShow","setTimeout","position","zIndex","left","right","top","opacity","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","App","run","SuperApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed659e5e.chunk.js","sourcesContent":["export const changeExchangeRates = (oldState = [], data={}) => {\r\n    let newState = [...oldState]\r\n    oldState.forEach((ele, idx) => {\r\n        if (ele.currency in data) {\r\n            newState[idx].rate = data[ele.currency]\r\n        }\r\n    })\r\n    return newState\r\n}\r\n\r\n\r\nexport const exchangeWallet = (oldState = [], data=[]) => {\r\n    let newState = [...oldState]\r\n    data.forEach(ele => {\r\n        let index = newState.findIndex(item => item.currency === ele.currency)\r\n        newState[index].amount = ele.amount\r\n    })\r\n\r\n    return newState\r\n}","import { combineReducers } from 'redux'\r\nimport { changeExchangeRates, exchangeWallet } from './actions'\r\n\r\nconst initialWallet = [\r\n    {currency: 'USD', symbol: '$', amount: 200, rate: 1},\r\n    {currency: 'EUR', symbol: '€', amount: 150, rate: 1},\r\n    {currency: 'GBP', symbol: '£', amount: 10, rate: 1},\r\n]\r\n\r\nconst initialSaga = {\r\n    loading: false,\r\n    error: false,\r\n    message: ''\r\n}\r\n\r\nexport const walletReducer = (state=initialWallet, action) => {\r\n    switch (action.type) {\r\n        case 'NEW_EXCHANGE_RATES':\r\n            return changeExchangeRates(state, action.data)\r\n        case 'EXCHANGE_WALLET_CURRENCIES':\r\n            return exchangeWallet(state, action.data)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sagaReducer = (state=initialSaga, action) => {\r\n    switch (action.type) {\r\n        case 'REQUEST_EXCHANGE_RATES':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false,\r\n                message: ''\r\n            }\r\n        case 'REQUEST_SUCCESS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                message: ''\r\n            }\r\n        case 'REQUEST_FAILED':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: true,\r\n                message: action.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    wallet: walletReducer,\r\n    saga: sagaReducer\r\n})","import { all, call, put, takeLatest } from 'redux-saga/effects'\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY\r\n\r\nfunction* getExchangeRates(action) {\r\n    try {\r\n        const response = yield call (() => fetch(`http://api.exchangeratesapi.io/v1/latest?access_key=${API_KEY}&symbols=GBP,USD,EUR`))\r\n        if (response.ok) {\r\n            const json = yield call([response, 'json'])\r\n            yield put({ type: 'NEW_EXCHANGE_RATES', data: json.rates })\r\n            yield put({ type: 'REQUEST_SUCCESS' })\r\n        } else {\r\n            yield put({ type: 'REQUEST_FAILED', message: response.statusText === '' ? 'Failed to get latest exchange rates' : response.statusText})\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n        yield put({ type: 'REQUEST_FAILED', message: 'API error ocurred ...' })\r\n    }\r\n}\r\n\r\n// action watcher\r\nfunction* tradeWatcher() {\r\n    yield takeLatest('REQUEST_EXCHANGE_RATES', getExchangeRates)\r\n}\r\n\r\n// root saga\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        tradeWatcher(),\r\n    ])\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const LoadingScreen = () => {\r\n    return (\r\n        <div className=\"loading-screen flex-display flex-center\">\r\n            <span>Loading</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ExchangeController = () => {\r\n    const wallet = useSelector(state => state.wallet)\r\n    const dispatch = useDispatch()\r\n    \r\n    const [firstWallet, setFirstWallet] = useState(0)\r\n    const [firstValue, setFirstValue] = useState(0)\r\n    const [secondWallet, setSecondWallet] = useState(1)\r\n    const [secondValue, setSecondValue] = useState(0)\r\n    const [exchangeRate, setExchangeRate] = useState(1)\r\n\r\n    useEffect(() => {\r\n        setExchangeRate(Math.round(wallet[secondWallet].rate / wallet[firstWallet].rate * 10000) / 10000)\r\n    }, [wallet, setExchangeRate, firstWallet, secondWallet])\r\n\r\n    useEffect(() => {\r\n        setSecondValue(Math.round(firstValue * exchangeRate * 100) / 100)\r\n    }, [exchangeRate, firstValue, setSecondValue])\r\n\r\n    const changeFirstExchangeAmount = (value) => {\r\n        setFirstValue(value)\r\n    }\r\n    const changeSecondExchangeAmount = (value) => {\r\n        setFirstValue(Math.round(value / exchangeRate * 100) / 100)\r\n    }\r\n    const changeFirstCurrency = (currencyIdx) => {\r\n        setFirstWallet(currencyIdx)\r\n    }\r\n    const changeSecondCurrency = (currencyIdx) => {\r\n        setSecondWallet(currencyIdx)\r\n    }\r\n    const exchangeCurrencies = () => {\r\n        dispatch({\r\n            type: 'EXCHANGE_WALLET_CURRENCIES',\r\n            data: [\r\n                {currency: wallet[firstWallet].currency, amount: wallet[firstWallet].amount - firstValue},\r\n                {currency: wallet[secondWallet].currency, amount: wallet[secondWallet].amount + secondValue}\r\n            ] \r\n        })\r\n        setFirstValue(0); setSecondValue(0)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div style={{padding: 24}}>\r\n            <div className=\"flex-display\" style={{fontSize: '12px'}}>\r\n                <div style={{flex: 1}}>\r\n                    <div>\r\n                        <select value={firstWallet.toString()} onChange={e => changeFirstCurrency(Number(e.target.value))}>\r\n                            {wallet.map((ele, idx) => (\r\n                                <option key={ele.currency} disabled={idx === secondWallet} value={idx.toString()}>{ele.currency}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <span className=\"input-prefix\">-</span>\r\n                    <input \r\n                        type=\"number\" \r\n                        value={firstValue === 0 ? '' : firstValue.toString()} \r\n                        onChange={e => changeFirstExchangeAmount(e.target.value === '' ? 0 : Number(e.target.value))} \r\n                        data-testid='firstValue'\r\n                    />\r\n                    <div className=\"exceeds-balance\">{firstValue > wallet[firstWallet].amount ? 'Exceeds balance' : <>&nbsp;</>}</div>\r\n                </div>\r\n                <div className=\"flex-display flex-center exchange-rate\" style={{flex: 1}}>\r\n                    {wallet[firstWallet].symbol}1 = {wallet[secondWallet].symbol}{exchangeRate}\r\n                </div>\r\n                <div className=\"flex-display\" style={{flex: 1, flexDirection: 'column', alignItems: 'flex-end'}}>\r\n                    <div>\r\n                        <select value={secondWallet.toString()} onChange={e => changeSecondCurrency(Number(e.target.value))}>\r\n                            {wallet.map((ele, idx) => (\r\n                                <option key={ele.currency} disabled={idx === firstWallet} value={idx.toString()}>{ele.currency}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"input-prefix\">+</span>\r\n                        <input \r\n                            type=\"number\" \r\n                            value={secondValue === 0 ? '' : secondValue.toString()} \r\n                            onChange={e => changeSecondExchangeAmount(e.target.value === '' ? 0 : Number(e.target.value))} \r\n                            data-testid='secondValue'\r\n                        />\r\n                    </div>\r\n                    <div>&nbsp;</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n            <div className=\"text-center\" style={{flex: 1}}>\r\n                <button className=\"exchange-button flex-display flex-center\" disabled={firstValue === 0 || firstValue > wallet[firstWallet].amount} onClick={exchangeCurrencies}>\r\n                    Exchange\r\n                </button>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const WalletShower = () => {\r\n    const wallet = useSelector(state => state.wallet)\r\n    return (\r\n        <div className=\"flex-display\" style={{paddingTop: 12, paddingBottom: 16}}>\r\n            {wallet.map(ele => (\r\n                <div key={ele.currency} style={{flex: 1, textAlign: 'center'}}>\r\n                    <div className=\"currency-symbol\">{ele.currency}</div>\r\n                    <div>{ele.symbol}{Math.round(ele.amount * 100) / 100}</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ExchangeCard = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch({type: 'REQUEST_EXCHANGE_RATES'})\r\n    }, [dispatch])\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                Wallet Management\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <ExchangeController />\r\n                <div style={{padding: 24, background: '#eee', borderRadius: '0 0 8px 8px'}}>\r\n                    <WalletShower />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Notification = ({message}) => {\r\n    const [show, setShow] = useState(true)\r\n    useEffect(() => {\r\n        setTimeout(() => setShow(false), 2000)\r\n    }, [setShow])\r\n    return (\r\n        <>\r\n        <div className=\"flex-display flex-center\" style={{position: 'fixed', zIndex: 10, left:0, right: 0, top: 10,}}>\r\n            <div className=\"notification\" style={{opacity: show ? 1 : 0}}>\r\n                {message}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}","import './App.css'\nimport React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider, useSelector } from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport reducer from './redux/reducer'\nimport rootSaga from './redux/saga'\nimport { ExchangeCard, LoadingScreen, Notification } from './components'\n\n// redux, saga settings\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n    reducer,\n    applyMiddleware(sagaMiddleware)\n)\n\nsagaMiddleware.run(rootSaga)\n\nfunction App () {\n    const { loading, error, message } = useSelector(state => state.saga)\n    return (\n        <>\n            <div className=\"flex-display flex-center full-size\">\n                <ExchangeCard />\n            </div>\n            { loading ? <LoadingScreen /> : null }\n            { error ? <Notification message={message} /> : null}\n        </>\n    )\n}\n\nfunction SuperApp () {\n    return (\n        <Provider store={store}>\n            <App />\n        </Provider>\n    )\n}\n\nexport default SuperApp\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}